#!/usr/bin/env node

var psm = require('../lib/psm'),
fs = require('fs'),
Manager = require('../lib/psm/manager/manager').Manager,
man = new Manager({ name: 'manager' });

psm.init(function(err) {
    if(err) { process.ext(1); return; }

    man.start();

    man.once('hook::ready', function() {
        //pid management
        var pid;
	try {
  	    pid = fs.readFileSync(psm.config.pids.manager);
	} catch(e) {}

	if(pid) {
	    psm.log.error('PSM Daemon is already running!');
	    process.exit(2);
	} else {
	    man.startup(function(err) {
                if(err) psm.log.error(err, 'Error starting manager');
            });

	    fs.writeFileSync(psm.config.pids.manager, process.pid);

	    process.on('uncaughtException', function(err) {
	        psm.log.error(err, 'Uncaught Exception in PSM Daemon');
		process.exit(1);
	    });

	    process.on('exit', function() {
	        try { fs.unlinkSync(psm.config.pids.manager); }
		catch(e) {}
	    });
	}
    });
});